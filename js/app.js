window.App=Ember.Application.create({LOG_VIEW_LOOKUPS:!0,LOG_TRANSITIONS:!0,LOG_TRANSITIONS_INTERNAL:!0,LOG_ACTIVE_GENERATION:!0}),Ember.Application.initializer({name:"storage",initialize:function(e,t){t.register("service:storage",window.App.Storage),t.inject("route","storage","service:storage"),t.inject("controller","storage","service:storage"),t.inject("adapter","storage","service:storage")}}),window.App.ApplicationSerializer=DS.ActiveModelSerializer.extend({primaryKey:"_id"}),window.App.ApplicationAdapter=DS.ActiveModelAdapter.extend({host:"https://api.byfirebepurged.com",headers:function(){return{Authorization:"apikey "+this.get("storage").getValue("apikey")}}.property().volatile()}),window.App.Router.map(function(){this.route("apikey",{path:"/apikey/:apikey"}),this.resource("raids",function(){this.route("new")}),this.resource("raid",{path:"/raid/:raid_id"},function(){}),this.resource("account",function(){this.resource("characters",function(){})})}),window.App.ApplicationController=Ember.Controller.extend({loggedIn:function(){return!!this.get("user")}.property("user")}),window.App.AuthController=Ember.Controller.extend({needs:["application"],apikey:Ember.computed.alias("controllers.application.apikey"),user:Ember.computed.alias("controllers.application.user"),loggedIn:Ember.computed.alias("controllers.application.loggedIn"),actions:{login:function(){$.ajax({type:"POST",url:"https://api.byfirebepurged.com/login",data:JSON.stringify({redirect:window.location.protocol+"//"+window.location.host+"/#/apikey/"}),contentType:"application/json",success:function(e){window.location=e.href}})},logout:function(){this.get("storage").removeValue("apikey"),this.set("apikey",void 0),this.set("user",void 0),this.transitionToRoute("index")}}}),window.App.CharactersIndexController=Ember.Controller.extend({realm:"All",onlyMax:!0,updateRealm:function(){var e=this.get("realm");e&&window.localStorage.setItem("coretheloothound_realm",e)}.observes("realm"),realms:function(){return this.set("realm",window.localStorage.getItem("coretheloothound_realm")||"All"),["All"].concat(_.uniq(_.map(this.get("model"),function(e){return e.realm})).sort())}.property("model.@each.realm"),sortProperties:["level:desc","name"],sorted:Ember.computed.sort("model","sortProperties"),filtered:function(){var e=this.get("realm"),t=this.get("onlyMax");return this.get("sorted").filter(function(s){return t&&s.level<90?!1:e&&"All"!==e?e===s.realm:!0})}.property("sorted","onlyMax","realm")}),window.App.RaidIndexController=Ember.ObjectController.extend({battle_tag_name:function(){var e=this.get("creator.battle_tag");return e.substring(0,e.indexOf("#"))}.property("creator"),guild_armory_url:function(){return"http://us.battle.net/wow/guild/"+this.get("guild.realm")+"/"+this.get("guild.name")+"/"}.property("guild"),totalSignups:function(){return this.get("signups").length}.property("signups"),totalSlots:function(){var e=this.get("groups");return e.size*e.number}.property("groups"),dateAgo:function(){return moment(this.get("date")).fromNow()}.property("date"),dateCalendar:function(){return moment(this.get("date")).calendar()}.property("date"),allTags:function(){return this.get("tags").join(", ")}.property("tags"),roster:function(){for(var e=this.get("groups"),t=this.get("signups"),s=[],a=1;a<=e.number;a++){var r=1,n={number:a,size:e.size,roles:{tank:e.roles.tank,healing:e.roles.healing,dps:e.roles.dps,any:e.size-e.roles.tank-e.roles.healing-e.roles.dps},slots:[]},h={tank:e.roles.tank,healing:e.roles.healing,dps:e.roles.dps};_.each(["tank","healing","dps"],function(e){var s=_.filter(t,{role:e.toUpperCase()});_.each(s,function(t){n.slots.push({number:r++,role:e.toUpperCase(),signup:t}),h[e]--}),h[e]>0&&_.times(h[e],function(){n.slots.push({number:r++,role:e.toUpperCase()})})}),_.times(e.size-n.slots.length,function(){n.slots.push({number:r++,role:"ANY"})}),s.push(n)}return s}.property("groups","signups")}),window.App.RaidsIndexController=Ember.Controller.extend({needs:["application"],sortProperties:["date:desc","title","created_at"],user:Ember.computed.alias("controllers.application.user"),sorted:Ember.computed.sort("model","sortProperties"),created:function(){var e=this.get("user");return _.filter(this.get("sorted"),function(t){return t.get("creator")._id===e._id})}.property("@each"),signed_up:function(){var e=this.get("user");return _.filter(this.get("sorted"),function(t){return _.any(t.get("signups"),function(t){return t.user._id===e._id})})}.property("@each"),available:function(){var e=this.get("user");return _.filter(this.get("sorted"),function(t){return t.get("creator")._id!==e._id&&_.all(t.get("signups"),function(t){return t.user._id!==e._id})})}.property("@each")}),window.App.RaidsNewController=Ember.ObjectController.extend({editDate:function(){return moment(this.get("date")).format("D MMMM, YYYY")}.property("date"),editTime:function(){return moment(this.get("date")).format("h:mm A")}.property("date"),updateDate:function(){this.set("date",moment(new Date(this.get("editDate")+" "+this.get("editTime"))))}.observes("editDate","editTime"),actions:{create:function(){var e=this,t=this.get("model");return t.save().then(function(t){e.transitionToRoute("raid.index",t)}).catch(function(e){console.log(e)})}}}),window.App.UserController=Ember.ObjectController.extend({user:Ember.computed.alias("session.user"),init:function(){this.set("realm","All")},onlyMax:!0,updateRealm:function(){var e=this.get("realm");e&&window.localStorage.setItem("coretheloothound_realm",e)}.observes("realm"),realms:function(){return this.set("realm",window.localStorage.getItem("coretheloothound_realm")||"All"),["All"].concat(_.uniq(_.map(this.get("session.user.characters"),function(e){return e.realm})).sort())}.property("session.user.characters.@each.realm"),characters:function(){var e=this.get("realm"),t=this.get("onlyMax");return _.filter(this.get("user.characters"),function(s){return t&&s.level<90?!1:e&&"All"!==e?e===s.realm:!0}).sort(function(e,t){var s=t.level-e.level;return 0===s?e.name<t.name?-1:e.name>t.name?1:0:s})}.property("user.characters.@each","realm","onlyMax")}),Ember.TEMPLATES.account=Ember.Handlebars.template(function(e,t,s,a,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var n,h="";return r.buffer.push("<h1>"),n=s._triageMustache.call(t,"user.battle_tag",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push("</h1>\n"),n=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push("\n"),h}),Ember.TEMPLATES.application=Ember.Handlebars.template(function(e,t,s,a,r){function n(e,t){var a,r="";return t.buffer.push('\n      <p class="text-muted">\n        Currently using API Key: '),a=s._triageMustache.call(e,"apikey",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n      </p>\n    "),r}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var h,o,u,l="",i=s.helperMissing,p=this.escapeExpression,c=this;return r.buffer.push('<div class="container">\n  '),r.buffer.push(p((o=s.render||t&&t.render,u={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r},o?o.call(t,"auth",u):i.call(t,"render","auth",u)))),r.buffer.push('\n  <div class="page-header">\n    <h1>Core the Loot Hound! <small>A World of Warcraft Raiding Site</small></h1>\n  </div>\n  <div>\n    '),h=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push('\n  </div>\n  <footer>\n    <p class="pull-right">\n      &copy; 2014 by Christopher Giroir &lt;<a href="mailto:kelsin@valefor.com">kelsin@valefor.com</a>&gt;\n    </p>\n    <p class="text-muted">\n      Core the Loot Hound is an <a href="http://emberjs.com/">Ember.js</a> front end to the\n      <a href="http://byfirebepurged.com">By Fire Be Purged</a> raid scheduling API.\n    </p>\n    '),h=s["if"].call(t,"loggedIn",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,n,r),contexts:[t],types:["ID"],data:r}),(h||0===h)&&r.buffer.push(h),r.buffer.push('\n    <p class="text-muted">\n      You can <a href="http://docs.coretheloothound.com">view the docs</a>, help\n      <a href="http://code.coretheloothound.com">contribute</a>, and\n      <a href="http://issues.coretheloothound.com">open an issue</a> for any problems.\n    </p>\n  </footer>\n</div>\n'),l}),Ember.TEMPLATES.auth=Ember.Handlebars.template(function(e,t,s,a,r){function n(e,t){t.buffer.push("Home")}function h(e,t){var a,r,n,h="";return t.buffer.push("\n    <li>"),r=s["link-to"]||e&&e["link-to"],n={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(4,o,t),contexts:[e],types:["STRING"],data:t},a=r?r.call(e,"raids",n):b.call(e,"link-to","raids",n),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n    <li>"),r=s["link-to"]||e&&e["link-to"],n={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(6,u,t),contexts:[e],types:["STRING"],data:t},a=r?r.call(e,"characters",n):b.call(e,"link-to","characters",n),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n    <li>"),a=s._triageMustache.call(e,"user.battle_tag",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push('</li>\n    <li><button class="btn btn-sm btn-default" '),t.buffer.push(m(s.action.call(e,"logout",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">Logout</button></li>\n  "),h}function o(e,t){t.buffer.push("Raids")}function u(e,t){t.buffer.push("Characters")}function l(e,t){var a="";return t.buffer.push('\n    <li><button class="btn btn-sm btn-primary" '),t.buffer.push(m(s.action.call(e,"login",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">Login</button></li>\n  "),a}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var i,p,c,f="",d=this,b=s.helperMissing,m=this.escapeExpression;return r.buffer.push('<ul class="auth">\n  <li>'),p=s["link-to"]||t&&t["link-to"],c={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,n,r),contexts:[t],types:["STRING"],data:r},i=p?p.call(t,"index",c):b.call(t,"link-to","index",c),(i||0===i)&&r.buffer.push(i),r.buffer.push("</li>\n  "),i=s["if"].call(t,"loggedIn",{hash:{},hashTypes:{},hashContexts:{},inverse:d.program(8,l,r),fn:d.program(3,h,r),contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n</ul>\n"),f}),Ember.TEMPLATES.characters=Ember.Handlebars.template(function(e,t,s,a,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var n,h="";return r.buffer.push('<div class="characters">\n  <h2>Characters</h2>\n  '),n=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push("\n</div>\n"),h}),Ember.TEMPLATES.raids=Ember.Handlebars.template(function(e,t,s,a,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var n,h,o,u="",l=s.helperMissing,i=this.escapeExpression;return r.buffer.push('<div class="raids">\n  <h2>Raids</h2>\n  '),r.buffer.push(i((h=s["link-to"]||t&&t["link-to"],o={hash:{"class":"btn btn-primary"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[t,t],types:["STRING","STRING"],data:r},h?h.call(t,"New Raid","raids.new",o):l.call(t,"link-to","New Raid","raids.new",o)))),r.buffer.push("\n  "),n=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push("\n</div>\n"),u}),Ember.TEMPLATES.user=Ember.Handlebars.template(function(e,t,s,a,r){function n(e,t){var a,r,n,h="";return t.buffer.push('\n    <div class="character">\n      <h3>'),a=s._triageMustache.call(e,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" <small>"),a=s._triageMustache.call(e,"level",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" "),a=s._triageMustache.call(e,"realm",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</small></h3>\n      <img "),t.buffer.push(c(s["bind-attr"].call(e,{hash:{src:"image_url"},hashTypes:{src:"STRING"},hashContexts:{src:e},contexts:[],types:[],data:t}))),t.buffer.push("/>\n      <p>"),t.buffer.push(c((r=s["class"]||e&&e["class"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},r?r.call(e,"class",n):f.call(e,"class","class",n)))),t.buffer.push("</p>\n      <p>"),a=s._triageMustache.call(e,"spec.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</p>\n      <p><span "),t.buffer.push(c(s["bind-attr"].call(e,{hash:{"class":"faction race"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(">"),t.buffer.push(c((r=s.race||e&&e.race,n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},r?r.call(e,"race",n):f.call(e,"race","race",n)))),t.buffer.push("</span></p>\n    </div>\n  "),h}function h(e,t){var a,r="";return t.buffer.push('\n    <div class="alert alert-info">No '),a=s["if"].call(e,"onlyMax",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(4,o,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("Characters</div>\n  "),r}function o(e,t){t.buffer.push("Max Level ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var u,l,i,p="",c=this.escapeExpression,f=s.helperMissing,d=this;return r.buffer.push("<h1>"),u=s._triageMustache.call(t,"user.battle_tag",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(u||0===u)&&r.buffer.push(u),r.buffer.push("</h1>\n<dl>\n  <dt>By Fire Be Purged API Key</dt>\n  <dd>"),u=s._triageMustache.call(t,"session.apikey",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(u||0===u)&&r.buffer.push(u),r.buffer.push('</dd>\n</dl>\n<div class="characters">\n  <h2>Characters</h2>\n  <div class="well form-inline">\n    <div class="col-xs-2">\n      <label for="realms">Realm</label>\n      '),r.buffer.push(c(s.view.call(t,"Ember.Select",{hash:{id:"realms",content:"realms",value:"realm"},hashTypes:{id:"STRING",content:"ID",value:"ID"},hashContexts:{id:t,content:t,value:t},contexts:[t],types:["ID"],data:r}))),r.buffer.push('\n    </div>\n    <div class="checkbox col-xs-4">\n      <label class="checkbox-inline">'),r.buffer.push(c((l=s.input||t&&t.input,i={hash:{type:"checkbox",checked:"onlyMax"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:r},l?l.call(t,i):f.call(t,"input",i)))),r.buffer.push(" Only show level 90 characters</label>\n    </div>\n  </div>\n  "),u=s.each.call(t,"characters",{hash:{},hashTypes:{},hashContexts:{},inverse:d.program(3,h,r),fn:d.program(1,n,r),contexts:[t],types:["ID"],data:r}),(u||0===u)&&r.buffer.push(u),r.buffer.push("\n</div>\n"),p}),Ember.TEMPLATES["characters/index"]=Ember.Handlebars.template(function(e,t,s,a,r){function n(e,t){var a,r,n,h="";return t.buffer.push('\n    <div class="character col-md-4">\n      <h3>'),a=s._triageMustache.call(e,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" <small>"),a=s._triageMustache.call(e,"level",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" "),a=s._triageMustache.call(e,"realm",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</small></h3>\n      <img "),t.buffer.push(c(s["bind-attr"].call(e,{hash:{src:"image_url"},hashTypes:{src:"STRING"},hashContexts:{src:e},contexts:[],types:[],data:t}))),t.buffer.push("/>\n      <p>"),t.buffer.push(c((r=s["class"]||e&&e["class"],n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},r?r.call(e,"class",n):f.call(e,"class","class",n)))),t.buffer.push("</p>\n      <p>"),a=s._triageMustache.call(e,"spec.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</p>\n      <p><span "),t.buffer.push(c(s["bind-attr"].call(e,{hash:{"class":"faction race"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(">"),t.buffer.push(c((r=s.race||e&&e.race,n={hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t},r?r.call(e,"race",n):f.call(e,"race","race",n)))),t.buffer.push("</span></p>\n    </div>\n  "),h}function h(e,t){var a,r="";return t.buffer.push('\n    <div class="alert alert-info">No '),a=s["if"].call(e,"onlyMax",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(4,o,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("Characters</div>\n  "),r}function o(e,t){t.buffer.push("Max Level ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var u,l,i,p="",c=this.escapeExpression,f=s.helperMissing,d=this;return r.buffer.push('<div class="well form">\n  <div class="form-group">\n    <label for="realms">Realm</label>\n    '),r.buffer.push(c(s.view.call(t,"select",{hash:{id:"realms","class":"form-control",content:"realms",value:"realm"},hashTypes:{id:"STRING","class":"STRING",content:"ID",value:"ID"},hashContexts:{id:t,"class":t,content:t,value:t},contexts:[t],types:["STRING"],data:r}))),r.buffer.push('\n  </div>\n  <div class="checkbox">\n    <label>'),r.buffer.push(c((l=s.input||t&&t.input,i={hash:{type:"checkbox",checked:"onlyMax"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:r},l?l.call(t,i):f.call(t,"input",i)))),r.buffer.push(' Only show level 90 characters</label>\n  </div>\n</div>\n<div class="row">\n  '),u=s.each.call(t,"filtered",{hash:{},hashTypes:{},hashContexts:{},inverse:d.program(3,h,r),fn:d.program(1,n,r),contexts:[t],types:["ID"],data:r}),(u||0===u)&&r.buffer.push(u),r.buffer.push("\n</div>\n"),p}),Ember.TEMPLATES["raid/index"]=Ember.Handlebars.template(function(e,t,s,a,r){function n(e,t){t.buffer.push("Yes")}function h(e,t){t.buffer.push("No")}function o(e,t){var a,r="";return t.buffer.push("\n    <dt>Guild</dt>\n    <dd><a "),t.buffer.push(y(s["bind-attr"].call(e,{hash:{href:"guild_armory_url"},hashTypes:{href:"ID"},hashContexts:{href:e},contexts:[],types:[],data:t}))),t.buffer.push(">"),a=s._triageMustache.call(e,"guild.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</a></dd>\n  "),r}function u(e,t){var a,r="";return t.buffer.push('\n      <span class="label label-primary">'),a=s._triageMustache.call(e,"",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</span>\n    "),r}function l(e,t){var a,r="";return t.buffer.push('\n  <div class="group">\n    <h1>Group '),a=s._triageMustache.call(e,"number",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push('</h4>\n    <div class="slots">\n      '),a=s.each.call(e,"slots",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(10,i,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n    </div>\n  </div>\n"),r}function i(e,t){var a,r="";return t.buffer.push('\n        <div class="slot">\n          '),a=s._triageMustache.call(e,"number",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(": "),a=s["if"].call(e,"signup",{hash:{},hashTypes:{},hashContexts:{},inverse:g.program(13,c,t),fn:g.program(11,p,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        </div>\n      "),r}function p(e,t){var a;a=s._triageMustache.call(e,"signup.user",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(a||0===a?a:"")}function c(e,t){var a;a=s._triageMustache.call(e,"role",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(a||0===a?a:"")}function f(e,t){var a,r="";return t.buffer.push("\n      <tr>\n        <td>"),a=s["if"].call(e,"approved",{hash:{},hashTypes:{},hashContexts:{},inverse:g.program(3,h,t),fn:g.program(1,n,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s["if"].call(e,"seated",{hash:{},hashTypes:{},hashContexts:{},inverse:g.program(3,h,t),fn:g.program(1,n,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s._triageMustache.call(e,"role",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s._triageMustache.call(e,"user",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s._triageMustache.call(e,"character.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n      </tr>\n    "),r}function d(e,t){var a,r="";return t.buffer.push("\n      <tr>\n        <td>"),a=s._triageMustache.call(e,"user.battle_tag",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s._triageMustache.call(e,"character.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s._triageMustache.call(e,"message",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s._triageMustache.call(e,"date",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n      </tr>\n    "),r}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var b,m="",y=this.escapeExpression,g=this;return r.buffer.push("<h1>"),b=s._triageMustache.call(t,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push("</h1>\n<dl>\n  <dt>Finalized</dt>\n  <dd>"),b=s["if"].call(t,"finalized",{hash:{},hashTypes:{},hashContexts:{},inverse:g.program(3,h,r),fn:g.program(1,n,r),contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push("</dd>\n  <dt>Created By</dt>\n  <dd>"),b=s._triageMustache.call(t,"battle_tag_name",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push("</dd>\n  <dt>Date</dt>\n  <dd>"),b=s._triageMustache.call(t,"dateCalendar",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push(" <small>"),b=s._triageMustache.call(t,"dateAgo",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push("</small></dd>\n  "),b=s["if"].call(t,"guild",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(5,o,r),contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push("\n  <dt>Tags</dt>\n  <dd>\n    "),b=s.each.call(t,"tags",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(7,u,r),contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push("\n  </dd>\n</dl>\n\n<h3>Groups</h3>\n"),b=s.each.call(t,"roster",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(9,l,r),contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push('\n\n<h3>Signups</h3>\n<table class="table">\n  <thead>\n    <tr>\n      <th>Approved</th>\n      <th>Seated</th>\n      <th>Role</th>\n      <th>User</th>\n      <th>Character</th>\n      <th>Tags</th>\n    </tr>\n  </thead>\n  <tbody>\n    '),b=s.each.call(t,"signups",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(15,f,r),contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push('\n  </tbody>\n</table>\n\n<h3>Log</h3>\n<table class="table">\n  <thead>\n    <tr><th>User</th><th>Character</th><th>Message</th><th>Date</th></tr>\n  </thead>\n  <tbody>\n    '),b=s.each.call(t,"logs",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(17,d,r),contexts:[t],types:["ID"],data:r}),(b||0===b)&&r.buffer.push(b),r.buffer.push("\n  </tbody>\n</table>\n"),m}),Ember.TEMPLATES["raids/index"]=Ember.Handlebars.template(function(e,t,s,a,r){function n(e,t){var a,r,n,u="";return t.buffer.push("\n      <tr>\n        <td>"),r=s["link-to"]||e&&e["link-to"],n={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(2,h,t),contexts:[e,e],types:["STRING","ID"],data:t},a=r?r.call(e,"raid.index","",n):f.call(e,"link-to","raid.index","",n),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s._triageMustache.call(e,"dateCalendar",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" <small>"),a=s._triageMustache.call(e,"dateAgo",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</small></td>\n        <td>\n          "),a=s["if"].call(e,"guild",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(4,o,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        </td>\n        <td>"),a=s._triageMustache.call(e,"totalSignups",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("/"),a=s._triageMustache.call(e,"totalSlots",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n      </tr>\n    "),u}function h(e,t){var a;a=s._triageMustache.call(e,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(a||0===a?a:"")}function o(e,t){var a,r="";return t.buffer.push("<a "),t.buffer.push(p(s["bind-attr"].call(e,{hash:{href:"guild_armory_url"},hashTypes:{href:"ID"},hashContexts:{href:e},contexts:[],types:[],data:t}))),t.buffer.push(">"),a=s._triageMustache.call(e,"guild.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</a>"),r}function u(e,t){var a,r,n,u="";return t.buffer.push("\n      <tr>\n        <td>"),r=s["link-to"]||e&&e["link-to"],n={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(2,h,t),contexts:[e,e],types:["STRING","ID"],data:t},a=r?r.call(e,"raid.index","",n):f.call(e,"link-to","raid.index","",n),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s._triageMustache.call(e,"dateCalendar",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" <small>"),a=s._triageMustache.call(e,"dateAgo",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</small></td>\n        <td>\n          "),a=s["if"].call(e,"guild",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(4,o,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n        </td>\n        <td>"),a=s._triageMustache.call(e,"totalSignups",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("/"),a=s._triageMustache.call(e,"totalSlots",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n        <td>"),a=s._triageMustache.call(e,"creator.battle_tag",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</td>\n      </tr>\n    "),u}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var l,i="",p=this.escapeExpression,c=this,f=s.helperMissing;return r.buffer.push('<h3>Created</h3>\n<table class="table">\n  <thead>\n    <tr><th colspan="4"><h3>Created</h3></th></tr>\n    <tr><th>Title</th><th>Date</th><th>Guild</th><th>Signups</th></tr>\n  </thead>\n  <tbody>\n    '),l=s.each.call(t,"created",{hash:{itemController:"RaidIndex"},hashTypes:{itemController:"STRING"},hashContexts:{itemController:t},inverse:c.noop,fn:c.program(1,n,r),contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push('\n  </tbody>\n</table>\n\n<h3>Signed Up</h3>\n<table class="table">\n  <thead>\n    <tr><th>Title</th><th>Date</th><th>Guild</th><th>Signups</th><th>Creator</th></tr>\n  </thead>\n  <tbody>\n    '),l=s.each.call(t,"signed_up",{hash:{itemController:"RaidIndex"},hashTypes:{itemController:"STRING"},hashContexts:{itemController:t},inverse:c.noop,fn:c.program(6,u,r),contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push('\n  </tbody>\n</table>\n\n<h3>Available</h3>\n<table class="table">\n  <thead>\n    <tr><th>Title</th><th>Date</th><th>Guild</th><th>Signups</th><th>Creator</th></tr>\n  </thead>\n  <tbody>\n    '),l=s.each.call(t,"available",{hash:{itemController:"RaidIndex"},hashTypes:{itemController:"STRING"},hashContexts:{itemController:t},inverse:c.noop,fn:c.program(6,u,r),contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("\n  </tbody>\n</table>\n"),i}),Ember.TEMPLATES["raids/new"]=Ember.Handlebars.template(function(e,t,s,a,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var n,h,o,u="",l=s.helperMissing,i=this.escapeExpression;return r.buffer.push(i((h=s.input||t&&t.input,o={hash:{type:"text",value:"title",placeholder:"Raid Title"},hashTypes:{type:"STRING",value:"ID",placeholder:"STRING"},hashContexts:{type:t,value:t,placeholder:t},contexts:[],types:[],data:r},h?h.call(t,o):l.call(t,"input",o)))),r.buffer.push("\n"),r.buffer.push(i((h=s.input||t&&t.input,o={hash:{type:"text",value:"editDate","class":"datepicker"},hashTypes:{type:"STRING",value:"ID","class":"STRING"},hashContexts:{type:t,value:t,"class":t},contexts:[],types:[],data:r},h?h.call(t,o):l.call(t,"input",o)))),r.buffer.push("\n"),r.buffer.push(i((h=s.input||t&&t.input,o={hash:{type:"text",value:"editTime","class":"timepicker"},hashTypes:{type:"STRING",value:"ID","class":"STRING"},hashContexts:{type:t,value:t,"class":t},contexts:[],types:[],data:r},h?h.call(t,o):l.call(t,"input",o)))),r.buffer.push('\n<button class="btn btn-primary" '),r.buffer.push(i(s.action.call(t,"create",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r}))),r.buffer.push(">Create</button>\n"),n=s._triageMustache.call(t,"date",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push("\n"),u}),Ember.Handlebars.helper("class",function(e){var t={1:"Warrior",2:"Paladin",3:"Hunter",4:"Rogue",5:"Priest",6:"Death Knight",7:"Shaman",8:"Mage",9:"Warlock",10:"Monk",11:"Druid"};return new Ember.Handlebars.SafeString('<span class="class-'+e+'">'+t[e]+"</span>")}),Ember.Handlebars.helper("faction",function(e){switch(e){case 1:case 3:case 4:case 7:case 11:case 22:case 25:return"Alliance";case 2:case 5:case 6:case 8:case 9:case 10:case 26:return"Horde";case 24:default:return"Neutral"}}),Ember.Handlebars.helper("race",function(e){var t=function(e){switch(e){case 1:case 3:case 4:case 7:case 11:case 22:case 25:return"alliance";case 2:case 5:case 6:case 8:case 9:case 10:case 26:return"horde";case 24:default:return"neutral"}},s={1:"Human",2:"Orc",3:"Dwarf",4:"Night Elf",5:"Undead",6:"Tauren",7:"Gnome",8:"Troll",9:"Goblin",10:"Blood Elf",11:"Draenei",22:"Worgen",24:"Pandaren",25:"Pandaren",26:"Pandaren"};
return new Ember.Handlebars.SafeString('<span class="'+t(e)+'">'+s[e]+"</span>")}),window.App.Raid=DS.Model.extend({title:DS.attr(),date:DS.attr(),creator:DS.attr(),guild:DS.attr(),finalized:DS.attr(),finalized_at:DS.attr(),tags:DS.attr(),logs:DS.attr(),allowed:DS.attr(),groups:DS.attr(),signups:DS.attr(),created_at:DS.attr(),updated_at:DS.attr()}),window.App.Session=Ember.Object.extend({init:function(){var e=this,t=window.localStorage.getItem("coretheloothound_apikey");t&&(e.set("apikey",t),e.updateUser())},updateApikey:function(){var e=this.get("apikey");e?window.localStorage.setItem("coretheloothound_apikey",e):window.localStorage.removeItem("coretheloothound_apikey")}.observes("apikey"),updateUser:function(){var e=this,t=this.get("apikey");t?Ember.$.ajax({type:"GET",url:"https://api.byfirebepurged.com/user",headers:{Authorization:"apikey "+t},contentType:"application/json",success:function(t){e.set("user",t.user)}}):e.set("user",void 0)}.observes("apikey")}),window.App.Storage=Ember.Object.extend({base:"coretheloothound_",getValue:function(e){return Modernizr.localstorage?window.localStorage.getItem(this.get("base")+e):Ember.$.cookie(this.get("base")+e)},setValue:function(e,t){Modernizr.localstorage?window.localStorage.setItem(this.get("base")+e,t):Ember.$.cookie(this.get("base")+e,t)},removeValue:function(e){Modernizr.localstorage?window.localStorage.removeItem(this.get("base")+e):Ember.$.removeCookie(this.get("base")+e)}}),window.App.ApikeyRoute=Ember.Route.extend({model:function(e){return e.apikey},afterModel:function(e,t){this.get("storage").setValue("apikey",e),t.send("loadUser"),this.transitionTo("index")}}),window.App.ApplicationRoute=Ember.Route.extend({model:function(){var e=this.get("storage").getValue("apikey");return e?new Ember.RSVP.Promise(function(t,s){Ember.$.ajax({type:"GET",url:"https://api.byfirebepurged.com/user",headers:{Authorization:"apikey "+e},contentType:"application/json",success:function(s){t({apikey:e,user:s.user})},error:s})}):Ember.RSVP.resolve({apikey:void 0,user:void 0})},setupController:function(e,t){e.set("apikey",t.apikey),e.set("user",t.user)},actions:{loadUser:function(){console.log("Refreshing"),this.refresh()}}}),window.App.CharactersIndexRoute=Ember.Route.extend({model:function(){return this.modelFor("application").user.characters}}),window.App.RaidNewRoute=Ember.Route.extend({model:function(e){return this.store.find("raid",e.raid_id)}}),window.App.RaidsIndexRoute=Ember.Route.extend({model:function(){return this.store.find("raid")}}),window.App.RaidsNewRoute=Ember.Route.extend({model:function(){return this.store.createRecord("raid",{date:moment().milliseconds(0).seconds(0).minutes(0).hour(18).add(7,"days")})}}),window.App.RaidsNewView=Ember.View.extend({didInsertElement:function(){Ember.run.schedule("afterRender",function(){Ember.$(".datepicker").pickadate(),Ember.$(".timepicker").pickatime({interval:15})})}});
//# sourceMappingURL=maps/app.js.map